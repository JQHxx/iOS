cd 到工程所在的目录,fastlane init

Gemfile ----- ##管理gem，定义了 gem 需要依赖的库文件##   显示本工程 fastlane 安装的插件和依赖包；
Gemfile.lock --- 记录gem 的版本和仓库信息；
Appfile ---- 配置 App 的 bundle ID 、version、profile 文件等，以及 AppleID 账号相关等信息；
Fastfile ---- 配置 fastlane 的各种 Action , 本工程使用的 fastlane 命令都在此处配置


使用 gem 工具 dotenv ，可以为 fastlane 指定环境变量
在 iOS 打不同包时，如果想要新建多个环境，可以在 fastlane 目录下，新建多个名称为 .env.xxx 的环境文件。
然后通过为 fastlane 命令加参数的方式 fastlane lane命令 --env xxx就能切换到需要的环境

bundle exec fastlane

=============================系统级lane
执行顺序	方法名	说明
1	before_all	在执行 lane 之前只执行一次。
2	before_each	每次执行 lane 之前都会执行一次。
3	lane	自定义的任务。
4	after_each	每次执行 lane 之后都会执行一次。
5	after_all	在执行 lane 成功结束之后执行一次。
6	error	在执行上述情况任意环境报错都会中止并执行一次

=============================插件
versioning: 用来修改build版本号和version版本号

firim: 直接把AdHoc或者InHouse打包的ipa上传到fir.im，供测试下载

=============================switch lane
switch lane 指的是在一个lane中调用另一个lane

在fastlane中，并不是所有lane都能相互调用，需要满足下面两个条件之一：
1.两个lane同属于同一个platform
2.被调用的lane不属于任何platform

lane的作用是绑定多个action，而platform则是绑定多个lane

也可以在platform之外添加lane，这种lane叫做通用lane，可以被所有的lane调用

lane :lane0 do
    puts "\nlane0"
end

platform :ios do
    lane :lane1 do
        puts "\nlane1"
    end 
    
    lane :lane2 do
        puts "\nlane2"
    end 
end

platform :android do
    lane :lane3 do
        puts "\nlane3"
    end 
    
    lane :lane4 do
        puts "\nlane4"
    end 
end
如果在终端执行fastlane lane1
[!] Could not find 'lane1'. Available lanes: lane0, ios lane1, ios lane2, android lane3, android lane4

fastlane ios lane1

当lane被定义在platform之内时，需要使用类似fastlane platform_name lane_name的命令结构来调用

很少有人会去执行带platform的命令，一般是执行命令fastlane lane_name
这是因为fastlane还提供了另一个方法：default_platform
default_platform :ios

=============================action
action可以看作是fastlane中的功能模块，每一个action都有其特定的功能，它规定了功能的具体实现

=============================用fastlane进行团队证书管理
在使用fastlane管理证书前,要先注册一个私有的仓库
match是fastlane的一个功能组件, 能自动从苹果官方上下载证书和pp文件同步到我们的git仓库中

// 查看用法
bundle exec fastlane action match 

cert、sigh和match是Fastlane中的三个Tool，他们都是与证书相关的工具
cert的作用是获取签名证书或删除过期的证书
sigh的作用是管理配置文件(provisioning profile)，比如创建新的、修复过期的、删除本地的等
match的主要作用是使用cert和sigh创建新的证书和配置文件，并它们放置在git上，然后重复使用

cert这个Tool下定义了两个Command,分别是create和revoke_expired，其中create是默认Command
除了在终端使用，cert还可以在lane中被当做action来调用