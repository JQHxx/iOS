https://github.com/fastlane/fastlane
https://docs.fastlane.tools/

export:
显示所有的环境变量

export 可新增，修改或删除环境变量，供后续执行的程序使用
export 的效力仅限于该次登陆操作
# export -p //列出当前的环境变量值
# export MYENV //定义环境变量
定义环境变量赋值
# export MYENV=7 //定义环境变量并赋值


https://docs.fastlane.tools/actions

===================================

Set up environment variables:
export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8
You can find your shell profile at ~/.bashrc, ~/.bash_profile, ~/.profile or ~/.zshrc depending on your system

检查Ruby版本，需要2.0及以上版本:
ruby -v

检查Xcode命令行工具是否安装:
xcode-select --install

-------------------------------------------Install
Install fastlane using:
# Using RubyGems
sudo gem install fastlane -NV // ##推荐## 推荐用RubyGems安装
# Alternatively using Homebrew
brew install fastlane
或者
通过bundle来管理Gemfile来安装fastlane && cocoapods
Use a Gemfile
It is recommended that you use a Gemfile to define your dependency on fastlane
Create a ./Gemfile in the root directory of your project with the content
source "https://rubygems.org"
gem "fastlane"

Run [sudo] bundle update and add both the ./Gemfile and the ./Gemfile.lock to version control
Every time you run fastlane, use bundle exec fastlane [lane]
On your CI, add [sudo] bundle install as your first build step
To update fastlane, just run [sudo] bundle update fastlane
-------------------------------------------

============================================================fastlane 命令
fastlane -v
fastlane -h

============================================================
ADC为开发者网站，ITC是ItunesConnect网站

Navigate your terminal to your project's directory and run:
fastlane init

Multiple App Store Connect teams found, please enter the number of the team you want to use:
1) "FLYVPN LIMITED" (118783449)
2) "Shanghai Youdun Network Technology Co., Ltd" (118361933)
Multiple teams found on the Developer Portal, please enter the number of the team you want to use:
1) YVJM8BZ3H5 "FLYVPN LIMITED" (Company/Organization)
2) N82WKSN6R7 "Shanghai Youdun Network Technology Co., Ltd" (Company/Organization)

Logging in with your Apple ID was successful
Your app 'com.aijiasuinc.AiJiaSuClient' is available in your Apple Developer Portal
Your app 'com.aijiasuinc.AiJiaSuClient' is available on App Store Connect

选择允许fastlane管理ITC上的元数据后，会将ITC上的所有元数据与截图下载到metadata和screenshots文件夹
Would you like fastlane to manage your app's metadata?
y

如果Deliverfile，screenshots和metadata目录没被创建，可以运行deliver init来创建。
下载iTC上的截图deliver download_screenshots,下载iTC上的元数据 deliver download_metadata

Successfully created new configuration files.
Successfully downloaded large app icon
Successfully downloaded all existing screenshots
Successfully created new Deliverfile at path './fastlane/Deliverfile'
Successfully generated fastlane configuration
fastlane lanes
How to customize your Fastfile：https://docs.fastlane.tools/actions

============================================================文件配置
1、配置.env
https://docs.fastlane.tools/advanced/other/#environment-variables
2、配置Appfile
Appfile文件用于指定 app_identifier, apple_id, team_id, itc_team_id等一些fastlane需要用到的信息
https://docs.fastlane.tools/advanced/Appfile/

The Appfile stores useful information that are used across all fastlane tools like your Apple ID or the application Bundle Identifier, 
to deploy your lanes faster and tailored on your project needs.
ex:
app_identifier "net.sunapps.1" # The bundle identifier of your app
apple_id "felix@krausefx.com"  # Your Apple email address
3、配置Deliverfile
https://docs.fastlane.tools/actions/deliver/
用于配置应用在 ITC 中的元数据信息
4、配置Fastfile
fastlane 中的块和lane
我们打包、发布等操作都是通过这个文件来执行

Fastfile里面包含的块类型有以下几种：
before_all 用于执行任务之前的操作，比如使用cocopods更新pod库，只执行一次
before_each 每次执行 lane 之前都会执行一次
lane 定义用户的主要任务流程。例如打包ipa，执行测试等等
after_each 每次执行 lane 之后都会执行一次
after_all 用于执行任务之后的操作，比如发送邮件，通知之类的
error 在执行上述情况任意环境报错都会中止并执行一次

lane的组成:


============================================================ENV用法
https://docs.fastlane.tools/advanced/other/#environment-variables

You can define environment variables in a .env or .env.default file in the same directory as your Fastfile
Environment variables are loaded using dotenv：https://github.com/bkeepers/dotenv

ex:
WORKSPACE=YourApp.xcworkspace

我们可以在fastlane下创建一个名为.env 的文件，自定义所需的临时变量
然后Fastlane的三个配置文件（Appfile、Deliverfile和Fastfile）分别从.env文件中通过ENV['xxxx']读取配置信息。

.env文件为隐藏文件，可使用如下命令查看：
$ defaults write com.apple.finder AppleShowAllFiles -boolean true;
$ killall Finder

fastlane also has a --env option that allows loading of environment specific dotenv files
.env and .env.default will be loaded before environment specific dotenv files are loaded
The naming convention for environment specific dotenv files is .env.<environment>
For example, fastlane <lane-name> --env development will load .env, .env.default, and .env.development
Alternatively, as environment variables are not a fastlane specific thing, you can also use standard methods to set them:
DELIVER_USER="felix@krausefx.com" fastlane test
or
export DELIVER_USER="felix@krausefx.com";
fastlane test
Although it kind of defeats the purpose of using them in the first place (not to have their content in any files), you can also set them in your Fastfile:
ENV["DELIVER_USER"] = "felix@krausefx.com"

  #APP唯一标识符
  APP_IDENTIFIER = "com.xxx.xx"

  #苹果开发者账号
  APPLE_ID = "xx@xxx.com"
  
  #ADC Team ID
  TEAM_ID = "CN*****SEU"

  #ITC Team ID
  ITC_TEAM_ID = "11*****89"

  #设置shell的语言环境
  LANG = "en_US.UTF-8"
  LC_ALL = "en_US.UTF-8"

  #工程名称
  SCHEME_NAME = "YourProjectName"

  #App 元数据及截图存放路径
  METADATA_PATH = "./metadata"
  SCREENSHOTS_PATH = "./screenshots"

  #ipa输出文件夹路径
  OUTPUT_DIRECTORY = "/Users/xx/Desktop/xxx/ipa"

  #App 元数据及截图下载时 直接覆盖 不询问
  DELIER_FORCE_OVERWRITE= true

  #更新描述
  UPDATE_DESCRIPTION = "fastlane自动打包上传测试"

  #自动提交审核
  SUBMIT_FOR_REVIEW = false

  #审核通过后立刻发布
  AUTOMATIC_RELEASE = false

  #PP文件
  PP_ADHOC = "xxxxxx_ADHoc"
  PP_APPSTORE = "xxxxxx_Distribution"

============================================================配置Deliverfile
# The Deliverfile allows you to store various App Store Connect metadata
# For more information, check out the docs
# https://docs.fastlane.tools/actions/deliver/

############################# 基本信息 ####################################

# bundle identifier
app_identifier ENV['APP_IDENTIFIER']

# Apple ID用户名
username ENV['APPLE_ID']

# 版权声明
# copyright "2019 xxx Inc"

# 支持语言
supportedLanguages = {
  "cmn-Hans" => "zh-Hans"
}

# app 名称
# name({
# 'zh-Hans' => "APPDemo"
# })

# 副标题
# subtitle(
#   'zh-Hans' => "小鱼小鱼，虾米虾米"
# )

# App价格
#price_tier 0

# 应用程序图标的路径 1024*1024
app_icon './fastlane/metadata/app_icon.jpg'

# 屏幕截图的文件夹的路径
screenshots_path ENV['SCREENSHOTS_PATH']

# 元数据的路径
metadata_path ENV['METADATA_PATH']


###################################  类别配置 ###################################

# 参考网站https://docs.fastlane.tools/actions/upload_to_app_store/#reference
# 设置 App 的类别.这里可以设置一个主要类别,一个次要类别.

# 主要类别 
primary_category "MZGenre.Lifestyle"
# 主要类别第一个子类别 无
# primary_first_sub_category
# 主要类别第二个子类别 无
# primary_second_sub_category

# 要设置的次要类别
secondary_category "MZGenre.Utilities"
# 设置的次要第一个子类别 无
# secondary_first_sub_category  
# 设置的次要第二个子类别 无
# secondary_second_sub_category


################################## 关键字\描述等信息 ###################################

# 搜索关键字
# keywords(
#  "zh-Hans" => "FastLane, 美女"
# )

# 技术支持网址
# support_url({
#  'zh-Hans' => "http://www.baidu.com"
# })

# 营销网址
#marketing_url({ 
#  'zh-Hans' => "http://www.baidu.com"
#})

# 隐私政策网址
#privacy_url({
#  'zh-Hans' => "http://www.baidu.com"
#})

# 本地化宣传文本信息介绍
#promotional_text( 
#  "zh-Hans" => "本地化宣传文本信息介绍",
#)

# app描述信息
#description({ 
#  'zh-Hans' => "APP的描述信息,用于APP功能的描述和介绍不能少于10个字符"
#})

# 版本描述
#release_notes({
#  'zh-Hans' => "这是第一个版本哦"
#})


################################## 分级 ########################################

#年龄分级配置
#app_rating_config_path "./fastlane/metadata/itunes_rating_config.json" 


################################# 提交审核信息等 #########################################

# 提交审核信息:加密, idfa 等
submission_information({    
    export_compliance_encryption_updated: false,
    export_compliance_uses_encryption: false,
    content_rights_contains_third_party_content: false,
    add_id_info_uses_idfa: false
})

# # 应用审核小组的联系信息 app 审核信息
# app_review_information(
#   first_name: "name",
#   last_name: "name",
#   phone_number: "手机号",
#   email_address: "email",
#   demo_user: "测试账号用户名",
#   demo_password: "测试账号密码",
#   notes: "noting"
# )

# run_precheck_before_submit true

# 在上传新截图之前，先清除所有之前上传的截图
overwrite_screenshots true

# 下载 metadata 及 screenshots 时直接覆盖，不询问
force true

# 不上传截图
skip_screenshots true

# 是否自动提交审核,true表示立马提交审核
submit_for_review ENV['SUBMIT_FOR_REVIEW']

# 审核通过后是否立刻发布,false表示需要手动发布
automatic_release ENV['AUTOMATIC_RELEASE']