目前单元测试主要分为TDD和BDD两种思维模式:
TDD是 Test Drive Development，指的是测试驱动开发
BDD是Behavior Drive Development ，指的是行为驱动开发，常用于敏捷开发中使用的测试方法.其主要是为了解决XCTest苹果官方测试框架测试时难以mock和stub的问题
在objc中，现在比较流行的BDD框架有specta、Kiwi、ceder，github上start较多的是Kiwi，在swift中，专用的 BDD 测试框架是Quick和Sleipnir

Stub:
Stub是指人为地让一个对象对某个方法返回我们事先规定好的值
Stub运用的主要场景是你需要和别的开发人员协同开发时，别人的模块尚未完成，而你的模块需要用到别人的模块，这时就需要Stub
例如，后端的接口未完成，你的代码已经完成了，Stub可以伪造一个调用的返回。
ojbc下可以使用OHHTTPStubs来伪造网络的数据返回。swift下，仍要手动写stub。

Mock:
Mock是一个非常容易和stub混淆的概念，简单来说，我们可以将Mock看做是一种更全面和更智能的Stub
Mock其实是一个对象，它是对现有类行为的一种模拟（或是对现有接口实现的模拟）
Mock和Stub最大的区别在于Stub只是简单的方法替换，不涉及新的对象，被stub的对象可以是业务代码中真正的对象，而Mock行为本身产生新的（不可能在业务代码中出现）的对象，并遵循类的定义响应某些方法。
Mock让你可以检查某种情况下，一个方法是否被调用，或者一个属性是否被正确设值。objc下可以使用OCMock来mock对象。但是，由于swift的runtime比较弱，所以，swift上一般要手动写mock。

==================================================XCTest框架之单元测试UnitTest
XCTestCase是苹果官方提供的一个单元测试工具，它的初始化不是用户控制的，开发者无需手动针对XCTestCase的subclass进行alloc和init或者调用静态方法初始化的操作

//断言,最基本的测试，如果expression为true则通过，否则打印后面格式化字符串
XCTAssert(expression, format...)

//Bool测试:  
XCTAssertTrue(expression, format...)
XCTAssertFalse(expression, format...)

//相等测试
XCTAssertEqual(expression1, expression2, format...)
XCTAssertNotEqual(expression1, expression2, format...)

//double float 对比数据测试使用
XCTAssertEqualWithAccuracy(expression1, expression2, accuracy, format...)
XCTAssertNotEqualWithAccuracy(expression1, expression2, accuracy, format...)

//Nil测试，XCTAssert[Not]Nil断言判断给定的表达式值是否为nil
XCTAssertNil(expression, format...)
XCTAssertNotNil(expression, format...)

//失败断言     
XCTFail(format...)