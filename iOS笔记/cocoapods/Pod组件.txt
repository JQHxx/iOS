gitignore.io:
https://www.toptal.com/developers/gitignore

sudo gem install cocoapods
gem list
sudo gem install cocoapods-acknowledgements
sudo gem uninstall cocoapods X.X.X

==================================================含第三方库的组件
本地检测代码仓库是否有问题
pod lib lint xxx.podspec --allow-warnings --use-libraries

远程检测代码仓库是否有问题
pod spec lint xxx.podspec --allow-warnings --use-libraries

向远程代码索引库提交spec
pod trunk push xxx.podspec --allow-warnings --use-libraries

==================================================不含第三方库的组件
//本地检测代码仓库是否有问题
pod lib lint --allow-warnings --verbose

//远程检测代码仓库是否有问题
pod spec lint --allow-warnings --verbose

//向远程代码索引库提交spec
pod trunk push xxx.podspec --allow-warnings --verbose

==================================================
pod lib lint -> git commit -> git push -> git tag -> git push --tag -> pod spec lint -> pod push

==================================================多target项目CocoaPods更新
在修改podfile并且pod install之后，复制的target会出现找不到头文件的情况
用abstract_target关键字添加一个不存在的target作为公用版，最下面增加项目中实际存在的target，表示共用上面的库
platform :ios, '8.0'

# Import CocoaPods sources
source 'https://github.com/CocoaPods/Specs.git'

abstract_target 'CommonPods' do

   pod 'AFNetworking'
   pod 'MJExtension'
   pod 'MJRefresh'
   pod 'SDWebImage'
   pod 'MBProgressHUD'
   pod 'IQKeyboardManager'
   pod 'Masonry'
   # 通讯录
   pod 'LJContactManager'
   # 选项卡
   pod 'BRPickerView'
   # 相机
   pod 'PureCamera'
   # 美洽客服
   pod 'Meiqia', '~> 3.4.3'
   # U-Share SDK UI模块（分享面板，建议添加）
   pod 'UMengUShare/UI'
   # 集成微信
   pod 'UMengUShare/Social/WeChat'
   # web 桥接
   pod 'WebViewJavascriptBridge', '~> 5.0'
   # 连连支付
   pod 'LLPay'
   # 极光
   pod 'JPush', '~> 3.0.6'
   
target 'jiebao'
target 'yingjidai'
target 'huawuque'
       
end
CommonPods是项目中不存在的自定义target名，最下面三个（jiebao、yingjidai、huawuque）是实际存在的target，
下面三个target共用了CommonPods中所有的三方库，每添加一个target再执行一遍pod install即可

==================================================cocoapods引入MJRefresh 
use_frameworks!的情况下: 
print(Bundle.main.bundlePath)
let bundle = Bundle(for: MJRefreshGifHeader.self)
print(bundle.bundlePath)

/Users/youdone-ndl/Library/Developer/CoreSimulator/Devices/B2F2E516-D85C-431B-B009-08ED2325EE37/data/Containers/Bundle/Application/4C1B2699-266B-4DB1-880C-48F225D20F67/TestGA.app
/Users/youdone-ndl/Library/Developer/CoreSimulator/Devices/B2F2E516-D85C-431B-B009-08ED2325EE37/data/Containers/Bundle/Application/4C1B2699-266B-4DB1-880C-48F225D20F67/TestGA.app/Frameworks/MJRefresh.framework


分别在app，framework（dynamic library），static lib中定义了三个类，并调用bundleForClass方法输出:
app -> app bundle
framework -> framework bundle
static lib -> app bundle

==================================================cocoapods
sudo gem install cocoapods

==================================================使用CocoaPods管理SDK
https://guides.cocoapods.org/making/making-a-cocoapod.html

/**
 ###私有库###
 pod repo
 github创建私有Specs仓库 https://github.com/ndlwill/CodeBaseSpecs
 pod repo add CodeBaseSpecs https://github.com/ndlwill/CodeBaseSpecs
 github创建私有代码库仓库 https://github.com/ndlwill/ndl-ios-sdk
 pod lib create ndl-ios-sdk
 可以将多个XX.podspec和XX目录的源码全放在ndl-ios-sdk
 
 git init
 git add .
 git commit -m "提交描述"
 git remote add origin 远程私有库地址
 // 第一次push如果报错的话可以加上-f
 git push origin master
 git tag '0.1.0'
 git push --tags
 
 pod lib lint Utilities.podspec --private
 pod spec lint Utilities.podspec --private
 pod repo push 索引库的本地名称 xx.podspec
 pod repo push CodeBaseSpecs Utilities.podspec

 source 官方索引库url
 source 私有索引库url
 pod '组件名称'
 pod install
 */