HTTP Live Streaming（HLS）是苹果公司实现的基于HTTP的流媒体传输协议，
可实现流媒体的直播和点播，主要应用在iOS系统，为iOS设备（如iPhone、iPad）提供音视频直播和点播方案

安全方面，HLS 提供了通过 HTTPS 加密对媒体文件进行加密 并 对用户进行验证，允许视频发布者去保护自己的网络

要实现HLS点播，重点在于对媒体文件分段
它的工作原理是把整个流分成一个个小的基于HTTP的文件来下载，每次只下载一些
在开始一个流媒体会话时，客户端会下载一个包含元数据的extended M3U (m3u8) playlist文件，用于寻找可用的媒体流

苹果对于自家的 HLS 推广也是采取了强硬措施，当你的直播内容持续十分钟
或者每五分钟内超过 5 MB 大小时，你的 APP 直播服务必须采用 HLS 架构，否则不允许上架

其中输入视频源是由摄像机预先录制好的。
之后这些源会被编码 MPEG-4（H.264 video 和 AAC audio）格式然后用硬件打包到 MPEG-2 的传输流中。
MPEG-2 传输流会被分散为小片段然后保存为一个或多个系列的 .ts 格式的媒体文件。
这个过程需要借助编码工具来完成，比如 Apple stream segmenter。

那个切片器（segmenter）也会创建一个索引文件，通常会包含这些媒体文件的一个列表，也能包含元数据。
他一般都是一个.M38U 个hi的列表。
列表元素会关联一个 URL 用于客户端访问。然后按序去请求这些 URL。

媒体编码:
媒体编码器获取到音视频设备的实时信号，将其编码后压缩用于传输。
而编码格式必须配置为客户端所支持的格式，比如 H.264 视频和HE-AAC 音频。
当前，支持 用于视频的 MPEG-2 传输流和 纯音频 MPEG 基本流。
编码器通过本地网络将 MPEG-2 传输流分发出去，送到流切片器那里。

流切片器:
流切片器（通常是一个软件）会通过本地网络从上面的媒体编码器中读取数据，然后将这些数据一组相等时间间隔的 小 媒体文件。
虽然每一个片段都是一个单独的文件，但是他们的来源是一个连续的流，切完照样可以无缝重构回去

切片器在切片同时会创建一个索引文件，索引文件会包含这些切片文件的引用。
每当一个切片文件生成后，索引文件都会进行更新。
索引用于追踪切片文件的有效性和定位切片文件的位置。
切片器同时也可以对你的媒体片段进行加密并且创建一个密钥文件作为整个过程的一部分。


文件切片器（相对于流切片器）
如果已经有编码后的文件（而不是编码流），你可以使用文件切片器，
通过它对编码后的媒体文件进行 MPEG-2 流的封装并且将它们分割为等长度的小片段。
切片器允许你使用已经存在的音视频库用于 HLS 服务。它和流切片器的功能相似，但是处理的源从流替换流为了文件

视频直播：
HTTP Live Streaming流媒体系统由内容准备、内容分发和客户端软件三部分组成
1. 内容准备
