self.webView = [[UIWebView alloc] initWithFrame:self.view.frame]; 
self.webView.delegate = self; 
NSURL *htmlURL = [[NSBundle mainBundle] URLForResource:@"index.html" withExtension:nil]; 
// NSURL *htmlURL = [NSURL URLWithString:@"http://www.baidu.com"]; 

NSURLRequest *request = [NSURLRequest requestWithURL:htmlURL]; 
// 如果不想要webView 的回弹效果 
self.webView.scrollView.bounces = NO; 
// UIWebView 滚动的比较慢，这里设置为正常速度 
self.webView.scrollView.decelerationRate = UIScrollViewDecelerationRateNormal; 
[self.webView loadRequest:request]; 

[self.view addSubview:self.webView];



<input type="button" value="扫一扫" onclick="scanClick()" /> 
<input type="button" value="获取定位" onclick="locationClick()" /> 
<input type="button" value="修改背景色" onclick="colorClick()" /> 
<input type="button" value="分享" onclick="shareClick()" /> 
<input type="button" value="支付" onclick="payClick()" /> 
<input type="button" value="摇一摇" onclick="shake()" /> 
<input type="button" value="返回" onclick="goBack()" /> 
// js 就列几个比较有代表性的functions: 

function loadURL(url) { 
var iFrame; iFrame = document.createElement("iframe"); 
iFrame.setAttribute("src", url); 
iFrame.setAttribute("style", "display:none;"); 
iFrame.setAttribute("height", "0px"); 
iFrame.setAttribute("width", "0px"); 
iFrame.setAttribute("frameborder", "0"); 
document.body.appendChild(iFrame); 
// 发起请求后这个iFrame就没用了，所以把它从dom上移除掉 
iFrame.parentNode.removeChild(iFrame); iFrame = null; 
} 

function asyncAlert(content) { setTimeout(function(){ alert(content); },1); } 
function locationClick() { loadURL("haleyAction://getLocation"); } 
function setLocation(location) { asyncAlert(location); document.getElementById("returnValue").value = location; }

拦截 URL：
UIWebView 有一个代理方法，
可以拦截到每一个链接的Request。
return YES,webView 就会加载这个链接；
return NO,webView 就不会加载这个连接。
我们就在这个拦截的代理方法中处理自己的URL

- (BOOL)webView:(UIWebView *)webView shouldStartLoadWithRequest:(NSURLRequest *)request navigationType:(UIWebViewNavigationType)navigationType 
{ 
NSURL *URL = request.URL; 
NSString *scheme = [URL scheme]; 
if ([scheme isEqualToString:@"haleyaction"]) 
{ [self handleCustomAction:URL]; 
return NO; 
} 
return YES; }

- (void)handleCustomAction:(NSURL *)URL 
{ 
NSString *host = [URL host]; 
if ([host isEqualToString:@"scanClick"]) { NSLog(@"扫一扫"); } 
else if ([host isEqualToString:@"shareClick"]) { [self share:URL]; } 
else if ([host isEqualToString:@"getLocation"]) { [self getLocation]; } 
else if ([host isEqualToString:@"setColor"]) { [self changeBGColor:URL]; } 
else if ([host isEqualToString:@"payAction"]) { [self payAction:URL]; } 
else if ([host isEqualToString:@"shake"]) { [self shakeAction]; } 
else if ([host isEqualToString:@"goBack"]) { [self goBack]; } }

将结果回调到JS中：
- (void)getLocation
{
    // 获取位置信息

    // 将结果返回给js
    NSString *jsStr = [NSString stringWithFormat:@"setLocation('%@')",@"广东省深圳市南山区学府路XXXX号"];
    [self.webView stringByEvaluatingJavaScriptFromString:jsStr];
}

JS中调用OC 方法的时候，也需要传参数到OC 
function shareClick() {
    loadURL("haleyAction://shareClick?title=测试分享的标题&content=测试分享的内容&url=http://www.baidu.com");
}
所有的参数都在URL的query中，先通过&将字符串拆分，在通过=把参数拆分成key 和实际的值

- (void)share:(NSURL *)URL { NSArray *params =[URL.query componentsSeparatedByString:@"&"]; NSMutableDictionary *tempDic = [NSMutableDictionary dictionary]; for (NSString *paramStr in params) { NSArray *dicArray = [paramStr componentsSeparatedByString:@"="]; if (dicArray.count > 1) { NSString *decodeValue = [dicArray[1] stringByReplacingPercentEscapesUsingEncoding:NSUTF8StringEncoding]; [tempDic setObject:decodeValue forKey:dicArray[0]]; } } NSString *title = [tempDic objectForKey:@"title"]; NSString *content = [tempDic objectForKey:@"content"]; NSString *url = [tempDic objectForKey:@"url"]; // 在这里执行分享的操作 // 将分享结果返回给js NSString *jsStr = [NSString stringWithFormat:@"shareResult('%@','%@','%@')",title,content,url]; [self.webView stringByEvaluatingJavaScriptFromString:jsStr]; }


OC调用JS方法，参数不是字符串时，不要加单引号

利用[webView stringByEvaluatingJavaScriptFromString:@"var arr = [3, 4, 'abc'];"];,可以往HMTL的JS环境中插入全局变量、JS方法等