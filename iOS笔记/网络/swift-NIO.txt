https://juejin.cn/post/6844903939188457479

https://github.com/apple/swift-nio/

https://juejin.cn/post/6903118565629820935

==========SwiftNIO 实战之TCP粘包/拆包
https://juejin.cn/post/6903118565629820935

TCP 粘包/拆包
在 Socket 通讯过程中，如果通讯的一端一次性连续发送多条数据包，TCP 协议会将多个数据包打包成一个 TCP 报文发送出去，这就是所谓的粘包。
而如果通讯的一端发送的数据包超过一次 TCP 报文所能传输的最大值时，就会将一个数据包拆成多个最大 TCP 长度的 TCP 报文分开传输，这就叫做拆包.

MTU（Maximum Transmission Unit）：泛指通讯协议中的最大传输单元。一般用来说明TCP/IP四层协议中数据链路层的最大传输单元，不同类型的网络MTU也会不同，我们普遍使用的以太网的MTU是1500，即最大只能传输 1500 字节的数据帧。

MSS（Maximum Segment Size）：指 TCP 建立连接后双方约定的可传输的最大 TCP 报文长度，是 TCP 用来限制应用层可发送的最大字节数。如果底层的 MTU 是 1500 byte，则 MSS = 1500 - 20(IP Header) - 20 (TCP Header) = 1460 byte。

字 word、字节 byte、位 bit

解决 TCP 的粘包/拆包问题:
通用做法：
（1）消息定长；
（2）在包尾增加回车换行符进行分割；
（3）将消息分为消息头和消息体，消息头中包含表示消息总长度（或者消息体长度）的字段，通常设计思路为消息头的第一个字段使用 int32 来表示消息的总长度；
（4）更复杂的应用层协议；