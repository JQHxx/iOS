DES 是一种把 64 位明文加密成 64 位密文的对称加密算法。它的密钥长度为 64 比特，但是除去每 7 个二进制位会设置一个用于错误检测的位以外，实际上密钥为 56 比特

DES 会以 64 个二进制为一个分组进行加密。以分组为单位进行处理的密码算法成为分组密码，DES 为分组密码的一种

DES 只能一次性加密 64 位明文，如果明文超过了 64 位，就要进行分组加密。反复迭代，迭代的方式成为模式

DES 加密的基本结构是 Feistel 网络、Feistel 结构、Feistel 密码，这个结构不仅仅用在 DES 中，还用在其他的加密算法中。
在 Feistel 网络中，加密的各个步骤称为轮(round)，整个加密过程就是若干次轮的循环。DES 是一种 16 轮循环的 Feistel 网络

------------------3DES
三重 DES (triple-DES) 是为了增加 DES 强度，所以将 DES 重复 3 次得到的一种算法。也称为 TDEA (Triple Data Encryption Algorithm)，通常缩写为 3DES

不过 3DES 有一个“奇怪”的地方，并不是用 DES 加密 3 次，而是加密-解密-加密，中间有一次解密的过程。
之所以这么设计，目的是为了让三重 DES 能兼容普通的 DES
如果三重加密中密钥都完全相同，那么就退化成了普通的 DES 了。(加密一次解密一次就抵消了)所以也就具备了向下兼容性

如果第一次和第三次用相同的密钥，第次用不同的密钥，这种三重 DES 称为 DES-EDE2 。
EDE 是加密(Encryption) -> 解密(Decryption) -> 加密(Encryption) 的缩写。
如果 3 次都用不同的密钥，则称 DES-EDE3
3DES 由于处理速度不高，除了兼容之前的 DES 以外，目前基本不再使用它了

------------------AES
Rijndael 算法，确定它为新的 AES

Rijndael 的分组长度和密钥长度可以分别以 32 位比特为单位在 128 比特到 256 比特的范围内进行选择。
不过在 AES 的规范中，分组长度被固定在 128 比特，密钥长度只有 128、192 和 256 比特三种

AES 的加密也是由多个轮组成的，分为 4 轮，SubBytes、ShiftRows、MixColumns、AddRoundKey 这 4 步，即 SPN 网络
1. SubBytes 字节变换
Rijndael 的输入分组默认为 128 比特，也就是 16 字节
第一步需要对每个字节进行 SubBytes 处理。以每个字节的值(0-255之间的任意值)为索引，从一张拥有 256 个值的替换表 S-Box 中查找出对应的值进行处理

2. ShiftRows 移行操作
这一步以 4 字节为单位的行 row 进行左移操作，且每一行平移的字节数不同

3. MixColumns 混行操作
这一步以 4 字节为单位的列 column 进行矩阵运算

4. AddRoundKey 异或运算
将上一步的输出与轮密钥进行 XOR，即进行 AddRoundKey 处理
左边 16 字节每个字节一次与轮密钥对应位置上的字节进行异或运算，计算完成以后得到最终的密文
到这里为止，是一轮 Rijndael 结束
一般整个算法要进行 10-14 轮计算


Rijndael 的解密过程为加密的逆过程。
在 Rijndael 加密过程中，每一轮处理的顺序为：
SubBytes -> ShiftRows -> MixColumns -> AddRoundKey
在 Rijndael 解密过程中，每一轮处理的顺序为：
AddRoundKey -> InvMixColumns -> InvShiftRows -> InvSubBytes
解密过程中除了第一步和加密完全一样，其他三步都为加密的逆过程。


=======================分组模式
由于 DES 和 AES 一次加密都只能加密固定长度的明文，如果需要加密任意长度的明文，就需要对分组密码进行迭代，而分组密码的迭代方式就称为分组密码的“模式”