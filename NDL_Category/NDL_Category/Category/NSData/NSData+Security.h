//
//  NSData+Security.h
//  NDL_Category
//
//  Created by dzcx on 2018/3/28.
//  Copyright © 2018年 ndl. All rights reserved.
//

#import <Foundation/Foundation.h>

/*
 客户端用RSA的公钥加密AES的秘钥，服务器端用私钥解开获得的AES的秘钥，
 客户端再与服务器端进行AES加密的数据传输，即HTTPS协议传输的原理
 
 对称加密算法：
 加密解密都使用相同的秘钥，速度快，适合对大数据加密，方法有DES，3DES，AES
 
 非对称加密算法：
 需要两个密钥：公开密钥（publickey）和私有密钥（privatekey）
 公开密钥与私有密钥是一对，可逆的加密算法，用公钥加密，用私钥解密，用私钥加密，用公钥解密，速度慢，适合对小数据加密，方法有RSA
 
 散列算法：
 （加密后不能解密，上面都是可以解密的）
 用于密码的密文存储，服务器端是判断加密后的数据
 不可逆加密方法：MD5、SHA1、SHA256、SHA512
 */

// Algorithm: 算法
// MD5:Message-Digest Algorithm 5（信息-摘要算法5） 又译摘要算法、哈希算法

// 元数据是指数据的数据
@interface NSData (Security)

// AES:Advanced Encryption Standard 这个标准用来替代原先的DES
/*
 加密模式：
 
 ECB(Electronic Code Book电子密码本)模式
 ECB模式是最早采用和最简单的模式，它将加密的数据分成若干组，每组的大小跟加密密钥长度相同，然后每组都用相同的密钥进行加密。
 优点:   1.简单；   2.有利于并行计算；  3.误差不会被扩散；
 缺点:   1.不能隐藏明文的模式；  2.可能对明文进行主动攻击；
 因此，此模式适于加密小消息。
 
 CBC(Cipher Block Chaining，加密块链)模式
 优点：  不容易主动攻击,安全性好于ECB,适合传输长度长的报文,是SSL、IPSec的标准。
 缺点：  1.不利于并行计算；  2.误差传递；  3.需要初始化向量IV
 
 CFB(Cipher FeedBack Mode，加密反馈)模式
 优点：
 1.隐藏了明文模式;  2.分组密码转化为流模式;  3.可以及时加密传送小于分组的数据;
 缺点:  1.不利于并行计算;  2.误差传送：一个明文单元损坏影响多个单元;  3.唯一的IV;
 
 OFB(Output FeedBack，输出反馈)模式
 优点:  1.隐藏了明文模式;  2.分组密码转化为流模式;  3.可以及时加密传送小于分组的数据;
 缺点:  1.不利于并行计算;  2.对明文的主动攻击是可能的;  3.误差传送：一个明文单元损坏影响多个单元;
 */
// 补码方式：PKCS7Padding PKCS5Padding
// 如果你想使用密钥偏移量IV 那你的加密模式必须为CBC

//Encrypt;加密
//Decrypt;解密

// base64 苹果自带

//公钥：就是签名机构签完给我们颁发的，放在网站的根目录上，可以分发
//私钥：一般保存在中心服务器
/*
RSA算法原理：
1.找出两个“很大”的质数：P & Q（上百位）
N = P * Q
M = (P – 1) * (Q – 1)
2.找出整数E，E与M互质，即除了1之外，没有其他公约数
3.找出整数D，使得 ED 除以 M 余 1，即 (E * D) % M = 1
4.经过上述准备工作之后，可以得到：E是公钥，负责加密D是私钥，负责解密N负责公钥和私钥之间的联系
5.加密算法，假定对X进行加密(X ^ E) % N = Y（6）解密算法，根据费尔马小定义，可以使用以下公式完成解密(Y ^ D) % N = X
*/


@end
