Json，全称为 JavaScript Object Notation, 也就是 JavaScript 对象标记，通过对象和数组的组合来表示数据

在 JavaScript 语言中，一切都是对象。

对象，对象在 JavaScript 中是使用花括号 {} 包裹起来的内容，数据结构为 {key1：value1, key2：value2, ...} 的键值对结构。在面向对象的语言中，key 为对象的属性，value 为对应的值。键名可以使用整数和字符串来表示。值的类型可以是任意类型。
数组，数组在 JavaScript 中是方括号 [] 包裹起来的内容，数据结构为 ["java", "javascript", "vb", ...] 的索引结构。在 JavaScript 中，数组是一种比较特殊的数据类型，它也可以像对象那样使用键值对，但还是索引使用得多。同样，值的类型可以是任意类型。

[{
    "name": "Bob",
    "gender": "male",
    "birthday": "1992-10-18"
}, {
     "name": "Selina",
    "gender": "female",
    "birthday": "1995-10-18"
}]

==================
import json

# Json 的数据需要用双引号来包围，不能使用单引号
str = '''
[{
    "name": "Bob",
    "gender": "male",
    "birthday": "1992-10-18"
}, {
    "name": "Selina",
    "gender": "female",
    "birthday": "1995-10-18"
}]
'''
data = json.loads(str) # 将字符串转为 Json 对象

data[0]['name']
data[0].get('name')

推荐使用 get() 方法来获取内容，这样如果键名不存在的话不会报错，会返回None。

data[0].get('age')
data[0].get('age', 25)
运行结果：
None
25


---------------
import json

with open('data.json', 'r') as file:
    str = file.read()
    data = json.loads(str)
    print(data)

=================
import json

data = [{
    'name': 'Bob',
    'gender': 'male',
    'birthday': '1992-10-18'
}]
with open('data.json', 'w') as file:
    file.write(json.dumps(data))

with open('data.json', 'w') as file:
    file.write(json.dumps(data, indent=2)) # indent，代表缩进字符个数


中文字符都变成了 Unicode 字符
为了输出中文，我们还需要指定一个参数 ensure_ascii 为 False，另外规定文件输出的编码。
with open('data.json', 'w', encoding='utf-8') as file:
    file.write(json.dumps(data, indent=2, ensure_ascii=False))